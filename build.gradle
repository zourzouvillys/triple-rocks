repositories {
  mavenCentral()
  jcenter()
  maven { url 'https://jitpack.io' }
}

apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.github.zourzouvillys'

version = "${version}" != "unspecified"
  ? "${version}"
  : 'master-SNAPSHOT';
    
sourceCompatibility = 8
targetCompatibility = 8


eclipse.project.name = 'triplerocks'


configurations {
  api 
  'default' { extendsFrom api }
}

artifacts { api jar }

artifacts { jar }


dependencies {

  api 'com.github.zourzouvillys:triplediff:c6b9de58aa'
  api 'org.apache.commons:commons-rdf-api:0.5.0'
  

  implementation      'com.google.protobuf:protobuf-java:3.6.1'
  
  api                 'org.apache.jena:jena-core:3.9.0'
  implementation      'org.apache.jena:jena-arq:3.9.0'
  
   implementation      'org.rocksdb:rocksdbjni:5.15.10'
      
  implementation      'com.google.guava:guava:26.0-jre'
  compileOnly         'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.150'
  
  testImplementation  'junit:junit:4.12'
  testImplementation  'org.assertj:assertj-core:3.6.1'
  testImplementation  'ch.qos.logback:logback-classic:1.2.3'  
  testImplementation  'org.apache.jena:jena-arq:3.9.0'
  testImplementation  'org.apache.curator:curator-test:4.0.1'
  
  
  testImplementation  'com.salesforce.kafka.test:kafka-junit4:3.0.1'
  testImplementation  'org.apache.kafka:kafka_2.11:2.0.0'
  testImplementation  'org.apache.kafka:kafka-clients:2.0.0'
  
}


jar {
  manifest {
    attributes ('Automatic-Module-Name': "zrz.triplerocks")
  }
}      


// --------------------------------------------------
// install
// --------------------------------------------------


task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}
    
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

javadoc {
  options.addBooleanOption('html5', true)
}  

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

javadoc {
  title = "ZRZ TripleRocks"
  failOnError = false
}

install {
  repositories.mavenInstaller {
    pom.project {
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
    }
  }
}

  publishing {
    publications {
      "$project.name"(MavenPublication) {
        groupId project.group
        artifactId project.name
        version project.version
        from components.java
        artifact sourcesJar
      }
    }
    repositories {
      maven {
        url = "$rootProject.buildDir/repo"
      }
    }
  }

test {

  // show standard out and standard error of the test JVM(s) on the console
  // testLogging.showStandardStreams = true

  // set heap size for the test JVM(s)
  minHeapSize = "128m"
  maxHeapSize = "256m"

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  //onOutput { descriptor, event ->
  //   logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  //}
  
  forkEvery = 1
  maxParallelForks = 4
  
}

wrapper {
  gradleVersion = '4.10.2'
}



